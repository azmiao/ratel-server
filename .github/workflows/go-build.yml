name: Go-build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    name: Go-build on  ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Go-build
      run: |
          go mod tidy
          go fmt
          go build -x -v
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.4.0
      with:
        name: server-${{ matrix.os }}
        path: server.exe
        if: ${{ matrix.os  == 'windows-latest' }}
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.4.0
      with:
        name: server-${{ matrix.os }}
        path: server
        if: ${{ matrix.os != 'windows-latest' }}
  build_docker:
      name: Build Docker
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Go mod tidy and format
        run: |
          go mod tidy
          go fmt

      - name: Install musl-tools
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Go-build
        run: |
          export CC=musl-gcc
          export CGO_ENABLED=1
          export GOOS=linux
          export GOARCH=amd64
          go build -v -a -tags netgo -ldflags '-w -extldflags "-static"' -o server-musl

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: server-${{ matrix.os }}-musl
          path: server
